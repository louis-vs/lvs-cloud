name: Deploy Infrastructure

on:
  push:
    branches: [master]
    paths:
      - 'infrastructure/**'
      - 'applications/monitoring-stack/**'
  workflow_dispatch:

env:
  TF_VAR_project_name: 'lvs-cloud'
  TF_VAR_domain: 'lvs.me.uk'
  TF_VAR_registry_user: ${{ secrets.REGISTRY_USERNAME }}
  TF_VAR_registry_pass: ${{ secrets.REGISTRY_PASSWORD }}
  # AWS credentials for S3 backend (Hetzner Object Storage)
  AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}

# Token Strategy:
# - HCLOUD_TOKEN_RO: Read-only operations (fmt, init, validate, outputs)
# - HCLOUD_TOKEN_RW: Read-write operations (plan, apply)

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    outputs:
      server_ip: ${{ steps.terraform-output.outputs.server_ip }}

    defaults:
      run:
        working-directory: infrastructure

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
      AWS_EC2_METADATA_DISABLED: true
      AWS_DEFAULT_REGION: us-east-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.9.0'

      - name: Terraform Format
        run: terraform fmt -check
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN_RO }}

      - name: Terraform Init
        run: terraform init
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN_RO }}

      - name: Terraform Validate
        run: terraform validate -no-color
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN_RO }}

      - name: Terraform Plan
        run: terraform plan -no-color -input=false
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN_RW }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN_RW }}

      - name: Get Terraform Outputs
        id: terraform-output
        run: |
          echo "server_ip=$(terraform output -raw server_ip)" >> $GITHUB_OUTPUT
        env:
          TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN_RO }}

  deploy-stack:
    name: 'Deploy Monitoring Stack'
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy monitoring stack
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ needs.terraform.outputs.server_ip }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Update monitoring stack
            cd /opt/monitoring-stack || sudo mkdir -p /opt/monitoring-stack

            # Download latest docker-compose file
            curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                 -H "Accept: application/vnd.github.v3.raw" \
                 -o docker-compose.yml \
                 https://api.github.com/repos/${{ github.repository }}/contents/applications/monitoring-stack/docker-compose.prod.yml

            # Restart services
            sudo docker-compose up -d --remove-orphans

            echo "âœ… Monitoring stack updated successfully"
