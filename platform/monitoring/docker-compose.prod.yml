services:
  # Grafana - Monitoring dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASS:-admin123}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_SERVER_ROOT_URL=https://grafana.lvs.me.uk
    volumes:
      - /mnt/data/grafana:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.lvs.me.uk`)'
      - 'traefik.http.routers.grafana.entrypoints=websecure'
      - 'traefik.http.routers.grafana.tls.certresolver=letsencrypt'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    networks:
      - web
      - monitoring

  # Mimir - Metrics storage and querying
  mimir:
    image: grafana/mimir:latest
    container_name: mimir
    restart: unless-stopped
    user: "10001:10001"
    command:
      - '--config.file=/etc/mimir/mimir.yml'
    volumes:
      - ./mimir/mimir.yml:/etc/mimir/mimir.yml:ro
      - /mnt/data/mimir:/data/mimir
    networks:
      - monitoring

  # Tempo - Distributed tracing
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    restart: unless-stopped
    user: "10002:10002"
    command:
      - '--config.file=/etc/tempo/tempo.yml'
    volumes:
      - ./tempo/tempo.yml:/etc/tempo/tempo.yml:ro
      - /mnt/data/tempo:/data/tempo
    networks:
      - monitoring

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    user: "10003:10003"
    command: -config.file=/loki/local-config.yaml
    volumes:
      - ./loki/local-config.yaml:/loki/local-config.yaml:ro
      - /mnt/data/loki:/loki
    networks:
      - monitoring

  # Watchtower - Automatic container updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/docker/config.json:/config.json:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300 # Check every 5 minutes
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=logger://
    networks:
      - monitoring

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # Grafana Alloy - Scrapes metrics and sends to Mimir
  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    restart: unless-stopped
    command:
      - run
      - /etc/alloy/config.alloy
      - --server.http.listen-addr=0.0.0.0:12345
      - --storage.path=/var/lib/alloy/data
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy:ro
    networks:
      - monitoring

networks:
  web:
    name: web
    external: true
  monitoring:
    name: monitoring
    driver: bridge
