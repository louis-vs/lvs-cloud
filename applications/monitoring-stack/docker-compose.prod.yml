version: '3.8'

services:
  # Docker Registry - Self-hosted container registry
  registry:
    image: registry:2.8
    container_name: registry
    restart: unless-stopped
    environment:
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: 'Registry Realm'
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '[https://registry.lvs.me.uk]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '[HEAD,GET,OPTIONS,DELETE]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '[Authorization,Accept,Cache-Control]'
      REGISTRY_HTTP_HEADERS_Access-Control-Max-Age: '[1728000]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials: '[true]'
      REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers: '[Docker-Content-Digest]'
    volumes:
      - /var/lib/registry:/data
      - /etc/docker/registry/auth:/auth
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.registry.rule=Host(`registry.lvs.me.uk`)'
      - 'traefik.http.routers.registry.entrypoints=websecure'
      - 'traefik.http.routers.registry.tls.certresolver=letsencrypt'
      - 'traefik.http.services.registry.loadbalancer.server.port=5000'
    networks:
      - web

  # Grafana - Monitoring dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_SERVER_ROOT_URL=https://grafana.lvs.me.uk
    volumes:
      - /var/lib/grafana:/var/lib/grafana
      - /etc/grafana/provisioning:/etc/grafana/provisioning
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.grafana.rule=Host(`grafana.lvs.me.uk`)'
      - 'traefik.http.routers.grafana.entrypoints=websecure'
      - 'traefik.http.routers.grafana.tls.certresolver=letsencrypt'
      - 'traefik.http.services.grafana.loadbalancer.server.port=3000'
    networks:
      - web
      - monitoring

  # Prometheus - Metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
      - '--web.external-url=https://prometheus.lvs.me.uk'
    volumes:
      - /etc/prometheus:/etc/prometheus
      - /var/lib/prometheus:/prometheus
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.prometheus.rule=Host(`prometheus.lvs.me.uk`)'
      - 'traefik.http.routers.prometheus.entrypoints=websecure'
      - 'traefik.http.routers.prometheus.tls.certresolver=letsencrypt'
      - 'traefik.http.services.prometheus.loadbalancer.server.port=9090'
    networks:
      - web
      - monitoring

  # Loki - Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: loki
    restart: unless-stopped
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - /etc/loki:/etc/loki
      - /var/lib/loki:/loki
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.loki.rule=Host(`loki.lvs.me.uk`)'
      - 'traefik.http.routers.loki.entrypoints=websecure'
      - 'traefik.http.routers.loki.tls.certresolver=letsencrypt'
      - 'traefik.http.services.loki.loadbalancer.server.port=3100'
    networks:
      - web
      - monitoring

  # Watchtower - Automatic container updates
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/docker/config.json:/config.json:ro
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300 # Check every 5 minutes
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
      - WATCHTOWER_NOTIFICATION_URL=logger://
    networks:
      - monitoring

  # Node Exporter - System metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

networks:
  web:
    name: web
    external: true
  monitoring:
    name: monitoring
    driver: bridge
